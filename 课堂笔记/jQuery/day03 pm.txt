正课: 
1. ***事件:
   绑定
   模拟操作
   页面加载后
2. 动画效果: 了解

1. ***事件: 
   鄙视题: jquery中绑定事件处理函数有几种方式: 
    1. $("...").bind("事件名",fn)
                 .unbind("事件名",fn)
                 .unbind("事件名")
                 .unbind()
    2. $("...").one("事件名",fn)
    3. $("...").事件名(fn)
    问题: bind只能对页面现有的元素绑定事件
            动态生成的元素无法自动绑定事件
    解决1: 利用冒泡: 将事件绑定到父元素上一次
              function(e){
                  var target=e.target
                  if(target必须是...的元素)
	    ... ...
              }
    解决2: delegate
    4. $("parent").delegate("selector", "事件名",fn)
           selector代替了fn中的if，自动筛选符合条件的子元素
           只有符合selector要求的子元素才能出发事件
           this->代替了e.target->$(this)->目标元素的jq对象
                         .undelegate("selector", "事件名",fn)
    鄙视: delegate vs bind
     1. 事件监听的个数: 
        delegate是仅在父元素添加一次事件监听
        bind通常都是在每个子元素都添加事件监听
     2. 对动态添加的元素: 
        delegate让动态添加的元素自动响应指定事件
        bind通常仅对现有元素添加绑定，无法自动给动态生成的元素添加绑定
 
    4. 已废弃: $("selector").live("事件名",fn)
                       $(document).delegate("selector","事件名",fn)
                    $("selector").die("事件名",fn)
                      $(document).undelegate("selector","事件",fn)

    5. 终极简化: $("...").on("事件名",fn) ->bind
                        $("parent").on("事件名","selector",fn)
                                          .delegate("selector","事件名",fn)

  模拟操作: 用代码模拟触发另一个元素的事件
     何时: 如果少量/个别平级元素拥有相同的事件处理函数
              不必利用冒泡！就用模拟触发
     如何: $("...").trigger("事件名")
          触发所有选中元素上的指定事件处理函数

***页面加载后执行: 
    只要将script放在body的结尾，默认就是页面加载后执行
    2种: 
    1. window.onload=function(){...}
          在页面加载后自动触发
    问题: onload: 整个加载完成: html , css , js , 图片...
             onload中通常执行DOM操作，和css和图片无关
    解决: ondomcontentLoaded: 仅DOM树和js加载完成
             其实domcontentLoaded时就已经可以执行DOM操作
    如何: $(document).ready(function(){...})
                                ondomcontentLoaded:
             简化: $().ready(function(){...})
             更简化: $(function(){...})
    其实: 将script放在body结尾，就已经是domcontentLoaded

补: hover: 
hover=mouseover+mouseout
何时: 今后只要进入元素和移出元素时，都要执行事件操作
如何: $("...").hover(fn1, fn2): over时执行fn1,out时执行fn2
         $("...").hover(fn) 无论over还是out都执行fn

2. 动画效果: 了解
  jquery中通过动画函数实现的动画效果――高级函数
  问题: 1. 高级函数，是用底层函数，再次进行的封装，可能发生变化
           2. 可能有兼容性问题
  解决: 简单动画: fade+in+transition

  简单动画函数:
     显示隐藏: $("...").show();   $("...").hide();  $("...").toggle(); 
                     ->display:none 默认无动画效果: 
           添加参数: 速度: 默认三挡: slow    normal     fast
                                    自定义毫秒数: 
           问题: 直接修改大量内联css属性实现的动画, 不可维护 
     上下滑动: $("...").slideUp();   $("...").slideDown();
                     $("...").slideToggle();
     淡入淡出: $("...").fadeIn();     $("...").fadeOut();
                     $("...").fadeToggle();

    $("...").动画API(速度,easing,callback)
        callback指在动画调用结束后，才调用callback
 
  万能动画函数: 
    $("...").animate(
       {css属性: 目标值, css属性: 目标值},//仅对数值属性有效
       speed,
       easing,
       callback
    )

  并发与排队: 
    并发: 多个动画效果同时执行!
       $("...").animate({多个属性},speed)
              多个属性同时变化
    排队: 多个动画先后执行:
       $("...").animate({先变化的属性},speed)
                 .animate({后变化的属性},speed)
    
  练习: 
    $("...").each(function(i){$(this)...})
      对类数组对象中每个元素执行相同的操作
  总结: 几乎所有jquery API都返回之前的jquery对象，可用链式操作减少反复调用$(),避免反复查询和反复创建jq对象。











