1、函数
	1、函数的作用域
		函数与变量类似，函数的作用域也分为：
		1、全局作用域(全局函数)
		2、函数作用域(局部函数)
	2、全局函数
		ECMAScript预定义的全局函数，可供用户直接使用
		1、parseInt()
			parseInt("35.5");
		2、parseFloat()
		3、Number();
		4、isFinite()
			作用：判断指定的数据是否有有限制
			isFinite(5);判断 数字类型 的数据 是否有有限值，结果为 true
			isFinite("a");判断 字符串类型 的数据 是否有有限值，结果为 false
		5、encodeURI()
			对 URI 格式的字符串进行编码，返回编码后的字符串
			URI : Uniform Resource Identifier
				统一资源标识符，负责定义 URI格式
			URL : Uniform Resource Locator
				统一资源定位器，符合URI规范的一个具体的地址。
		6、decodeURI()
			对 已编码的字符串进行解码
		7、eval()
			作用：用于执行以string形式出现的JS代码
			语法：eval(js代码);
			eval()函数也可以用于将JSON字符串解析为JS对象。
2、分支结构
	1、程序的流程控制
		程序=数据 + 算法
		程序的三种结构：
		1、顺序结构
		2、分支结构
		3、循环结构
	2、分支结构
		1、什么是分支结构
			程序在运行过程中，根据不同的条件，选择执行某些语句

			1、if-结构
				当条件满足时，运行某些语句。
				当条件不满足时，则不运行这些语句。
			2、if-else结构
				当条件满足时，运行某些语句
				当条件不满足时，运行另外一些语句。
		2、if-结构
			1 、语法
				if(条件表达式){
					语句块;
				}
				流程：
					1、判断 条件表达式的结果
					2、
						如果结果为 true， 则执行 语句块内容
						如果结果为false， 则不执行语句块的内容
			2、注意
				1、if语句，条件位置处，必须为 boolean的值/表达式/变量
					如果 条件 不是boolean 类型的话，JS会自动进行转换
					以下情况，if 都会认为是 false
					if(0){}
					if(0.0){}
					if(""){}
					if(null){}
					if(undefined){}
					if(NaN){}
					除以上情况外，一律为真
					if(1){
						console.log("真!");
					}
					if("我帅吗"){
						console.log("真!!!!");
					}
				2、if语句块的{} ， 可以被省略的
					如果省略{},那么if只控制它下面的第一条语句
		3、if-else 结构
			语法：
				if(条件){
					语句块1;
				}else{
					语句块2;
				}
			如果 条件 为真的话，则执行语句块1中的操作
			否则 则执行语句块2中的操作
			if(收款金额>=应收金额){
				正常计算找零并输出
			}else{
				给出错误提示
			}
		4、else if 结构
			复杂if结构 或 多重if结构
			1、问题
				分数判断：
					如果 成绩大于 90分 则输出A
					如果 成绩大于 80分 则输出B
					如果 成绩大于 60分 则输出C
					否则 输出 D
			2、语法
				if(条件1){
					语句块1;
				}else if(条件2){
					语句块2;
				}else if(条件3){
					语句块3;
				}...else{
					语句块n;
				}
				注意：最后的 else 模块，可以选择性添加
		5、使用 else if 结构 实现 根据克莱托指数输出胖瘦正常
			克莱托指数=体重(kg)/(身高(m)*身高(m))
			指数：
				20 以下 则偏瘦
				20~25 正常
				25 以上 则偏胖

			张东老师：
				体重：100kg
				身高：1.86
				指数：28.90...
3、分支结构-2
	1、switch-case
		1、场合
			优先用于 等值判断 的条件中
		2、
			输入 今天是 星期?
			星期一：土豆炖牛肉
			星期二：牛肉炖土豆
			星期三：牛肉炖柿子
			星期四：柿子炖牛肉
			星期五：牛肉炖萝卜
			星期六：休息
			星期日：休息
		3、语法
			switch(变量/表达式){
				case 值1:
					语句1;
					语句2;
					...
					break; //可选的，跳出switch-case结构
				case 值2:
					语句1;
					语句2;
					break; //可选
				... ...
				default://以上任何一个case都匹配不上时执行
					语句1;
					语句2;
					break; //可选
			}
		
			流程：
				1、计算 变量 或 表达式的值
				2、将计算出来的值与case 后的数值 做等值判断，如果判断相等的话，则执行对应的case 后的执行语句。
				3、如果 碰到 break，则结束执行，否则，继续向下执行。
			switch-case 的结束机制：
				1、碰到 break 结束
				2、整个结构都执行完毕 结束
			直落:
				两个case 或 多个 case之间，没有任何的可执行代码，那么就以最后一块的case为主
4、循环结构
	1、什么是循环结构
		问题：
			1、控制台打印输出一句Hello World
				console.log("Hello World");
			2、控制台打印输出十句Hello World
				...
					循环条件：
						从第1句开始
						到第10句结束
					循环操作：
						打印 Hello World
			3、控制台打印输出100句Hello World
					循环条件：
						从第1句开始
						到第100句结束
					循环操作：
						打印 Hello World
			4、将100句Hello World 替换成 你好世界!
					循环条件：
						从第1句开始
						到第100句结束
					循环操作：
						打印 你好世界
			5、增加 第几遍 你好世界! 的输出
				第1遍 你好世界
				第2遍 你好世界
		什么是循环：
			反复一遍又一遍的做着相同(相似)的事情
		生活中的循环：
			1、上课
				开始：8月31日
				结束：12月xx日
			2、5000米长跑
				
		循环中的两大要素：
			1、循环条件
				什么时候开始，什么时候结束
			2、循环操作
				循环体，循环过程中 干了什么
	2、循环结构-while循环
		1、语法
			while(条件){
				循环操作
			}

			流程：
				1、判断 条件
				2、如果条件为真，则执行循环操作
				3、再判断条件，如果为真，继续执行循环操作
				...
				n、判断循环条件，如果条件为假，则退出循环结构

			注意：如果 循环条件一直为真的话，那么循环就是个死循环，尽量避免死循环的产生。一定要记得更新循环变量(条件)
		2、练习
			1、打印输出 1~100之间的 每一个数字
			2、累加 1~100之间 每个数字的和，最后打印输出
		3、循环的流程控制
			1、continue 关键字
				作用：用在循环中，用于终止本次循环，继续执行下次循环
			2、break 关键字
				作用：用在循环中的话，终止整个循环结构!!!
			练习：
				要求用户 在网页上循环录入数据，并打印输出，如果 录入的 exit ，结束操作
				循环条件：录入 exit 为止
				循环操作：
					1、让用户录入数据
					2、如果不是 exit 打印输出
					3、如果是exit，则退出循环
作用：
	将 日期计算器 改成 循环版本








