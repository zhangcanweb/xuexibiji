1、渐变
	1、径向渐变
		1、语法
			background-image:radial-gradient([size at position],color-point,color-point,...);
			1、size at position
				size:圆的半径
				position:圆心的位置
					1、数值
						0px 0px ：圆心在元素的左上角
						15px 30px : 
					2、百分比
					3、关键字
				
				注意：该参数可以省略，如果省略的话，那么圆心默认就在元素的中间位置处
	2、重复渐变
		1、语法
			background-image:
				repeating-linear-gradient(angle,color-point,color-point);

				repeaiting-radial-gradient([size at position],color-point,...);
	3、浏览器兼容性
		可以通过增加 浏览器前缀 的方式 实现兼容性
		Firefox : -moz-
		Chrome & Safari :-webkit-
		Opera : -o-

		前缀加在哪???
		如果浏览器不支持 属性的话，那么前缀就加在 属性名称之前
		ex 
		 animation : 动画属性 
		 -moz-animation ：值;

		如果浏览器支持属性但不支持值的话，那么前缀就加在 属性值前
		ex
			background-image:背景图像可以做渐变

			background-image:linear-gradient();
			background-image:-moz-linear-gradient();
			background-image:-webkit-linear-gradient();
			background-image:-o-linear-gradient();
2、文本格式化
	1、概述
		控制字体：字体大小，加粗，样式 ,... ...
		文本格式：文本颜色，排列，缩进 ,... ...

		<b></b> 加粗 --> 加粗
		<i></i> 斜体 --> 样式
	2、字体属性
		1、字体系列
			font-family:value1,value2,... ...;

			ex:
				font-family:"微软雅黑",arial;
		2、字体大小
			font-size
			取值：px，pt，em 作为单位
		3、字体加粗
			font-weight
			取值：
				1、normal
					正常，非加粗显示
					除<b>,<strong>,<h1>~<h6>以外的元素的默认值
				2、bold
					加粗
					<b>,<strong>,<h1>~<h6> 的默认值
				3、400~900
					400 : normal
					900 : bold
		4、字体样式
			font-style
			取值：
				1、normal
					正常，除<i>以外的默认值
				2、italic
					斜体，<i>的默认值
		5、小型大写字母
			font-variant
			取值：
				1、normal
					正常
				2、small-caps
		6、字体属性-font
			font:style variant weight size family;
			注意：在使用简写方式时，一定要带着 family ，否则设定无效

			font:12px; /* 无效*/
			font:12px "微软雅黑";/*有效*/
	3、文本属性
		1、文本颜色
			color
		2、文本排列
			作用：指定文本或行内元素或行内块元素的水平对齐方式
			属性：text-align
			取值：left/center/right
		3、文字修饰
			作用：线条修饰效果
			属性：text-decoration
			取值：
				1、none
					不显示线条
				2、underline
					下划线，<a>,<u>
				3、line-through
					删除线 ,<s>的默认值 
				4、overline
					上划线
		4、行高(重点)
			1、作用
				一行数据的高度
				如果 行高的高度 高于 文字本身的高度的话，那么该段文本将在指定行高的范围内呈现出 垂直居中的显示效果
			2、属性
				line-height
		5、首行文本缩进
			属性：text-indent
			取值：以px为单位的数值(距离)
		6、文本阴影
			属性：text-shadow
			取值：h-shadow v-shadow blur color
3、表格
	1、表格常用样式属性
		1、内边距属性-padding
		2、尺寸属性-width，height
		3、文本格式化属性
			font-*:
			color,text-align,... ...
		4、背景属性
			颜色，图像，渐变
		5、边框属性
		6、vertical-align
			垂直方向对齐
			取值：
				top/middle/bottom
	2、表格特有样式属性
		1、边框合并
			属性：border-collapse
			取值：
				1、separate
					默认值，分离边框模式
				2、collapse
					边框合并模式
		2、边框边距
			1、作用
				设置相邻单元格边框之间的距离(类似于cellspacing)
			2、属性
				border-spacing
				取值：
					1、取1个值
						表示水平和垂直间距相等
					2、取2个值
						第一个值表示的 水平间距
						第二个值表示的 垂直间距
						两个值之间用 空格 隔开
			3、要求
				border-collapse必须为separate
				必须为分离边框模式时有效
		3、标题位置
			<caption></caption>
			作用：将标题位置由默认的位置改到表格之下
			属性：caption-side
			取值：
				1、top
					默认
				2、bottom
					标题位于表格之下
		4、显示规则
			1、作用
				指定浏览器以什么样的方式来布局一个表格。实际是指定了单元格的算法规则

				默认算法：单元格的宽由内容来决定，不受设置的width值来限定。
			2、属性
				table-layout
				取值：
					1、auto
						默认值，自动，列宽由内容来决定
					2、fixed
						固定表格布局，列宽由设定的值决定。
			3、自动表格布局&固定表格布局
				1、自动表格布局(auto)
					单元格的大小会适应内容大小
					在表格复杂时，加载会比较慢
					适用于不确定每列大小时使用
					传统表格表现方式
				2、固定表格布局(fixed)
					单元格的大小由设定的值来决定，与内容无关
					会加速显示表格，浏览器在加载完第一行的时候就不用再计算了。
4、浮动(重难点)
	1、定位
		1、什么是定位
			所谓的定位，实际上就是定义元素框相对于其正常位置应该出现的位置。简单的说，定位就是改变元素在页面上的位置。
		2、定位的分类
			1、普通流定位(默认)
			2、浮动定位
			3、相对定位
			4、绝对定位
			5、固定定位
		3、定位-普通流定位
			普通流定位，也称之为 文档流定位，页面元素默认的定位方式。

			页面块级元素，按照从上到下的方式排列
			页面行内元素，行内块元素，按照从左到右的方向排列。

			问题：多个块级元素在一行内显示???
	2、浮动定位
		1、浮动定位概述
			如果元素的定位方式被设定为 浮动定位，那么将具备以下特征：
			1、元素将被排除在文档流之外-脱离文档流
				不在占据页面空间,后面的非浮动元素，要上前补位。
			2、浮动元素会停靠在父元素的左边或右边，或停靠在平级的其他已浮动元素的边缘上
			3、浮动元素依然位于父元素之内
			4、浮动定位专门处理 块级元素在一行内显示的问题
		2、语法
			属性：float
			取值：
				1、none
					默认值，无浮动
				2、left
					左浮动，让元素停靠在父元素的左边，或者挨着左侧已有的浮动元素
				3、right
					右浮动，让元素停靠在父元素的右边，或者挨着右侧已有的浮动元素
		3、浮动引发的特殊效果
			1、当父元素宽度，显示不下所有的已浮动子元素，那么最后一个将换行
			2、元素一旦浮动起来之后，那么宽度将变成自适应(由内容决定宽度)
			3、元素一旦浮动起来之后，那么将变成块级元素，尤其对行内元素和行内块元素影响较大
				块级元素：能改变 尺寸
				行内元素：不能改变尺寸
			4、文本，行内元素，行内块元素 采用 环绕的方式来排列的，是不会被浮动元素压在底下，而会巧妙的避开浮动元素。
		4、清除浮动
			元素一旦浮动后就会对后续的元素带来一定的影响(位置的影响),如果后续元素想取消位置影响，可以通过 清除浮动的方式来解决
			属性：clear
			取值：
				1、none
					默认值，不做任何清除浮动的操作
				2、left
					清除该元素左边(上边)的浮动元素带来的影响
					该元素的左边不允许出现浮动元素
				3、right
					清除该元素右边的浮动元素带来的影响
					该元素的右边不允许出现浮动元素
				4、both
					清除该元素两边的浮动元素带来的影响
					该元素两边都不允许出现浮动个元素
		5、浮动元素对父元素带来的影响
			解决方案：
			1、直接设置父元素高度
			2、父元素 浮动
			3、为父元素设置 overflow
				overflow:hidden;
				overflow:auto;
			4、父元素中，追加空块级子元素，并且设置其clear属性为both








