1、框模型(重难点)
	1、框模型
		Box Model(框模型，盒模型，盒子模型)
		定义了元素框处理元素内容(尺寸)，内边距，边框和外边距的方式。

		width 和 height 指内容区域的宽度和高度
		增加了内边距，外边距，边框不会影响内容区域的尺寸，但是会影响元素框的总尺寸

		元素实际宽度=左右外边距+左右边框+左右内边距+width;
		元素实际高度=上下外边距+上下边框+上下内边距+height;

		1、外边距
			1、什么是外边距
				围绕在元素边框周围的空白区域
					外边距会在元素外创建空白
					是透明的
				与下一个元素之间的空间量
			2、语法
				属性：
					margin : 四个方向的外边距
					margin-left : 左外边距
					margin-right : 右外边距
					margin-top : 上外边距
					margin-bottom : 下外边距
				取值：
					单位：
						1、具体数值(px)
						2、百分比%
						3、值为 auto
							由浏览器自动计算 左右外边距，上下无效
							允许让块级元素 ， 呈现出水平居中的表现效果
							要求：块级元素必须设置宽度。
						4、负值
							设置 左外边距和上外边距为负数时，元素会向着相反的方向移动
				简洁写法：
					margin:value;上下左右四个方向外边距
					margin:v1 v2;v1：上下外边距，v2：左右外边距。
	  					margin:10px 20px;
						上下各10像素外边距，左右各20px外边距
					margin:v1 v2 v3;v1:上外边距 v2:左右外边距 v3:下外边距
						margin:5px 10px 3px;
						上外边距：5px
						左右外边距：10px
						下外边距：3px 

						margin:10px auto 2px;
					
					margin:v1 v2 v3 v4;
						v1 : 上
						v2 : 右
						v3 : 下
						v4 : 左
			3、具备默认外边距的元素
				取消默认外边距
				body,p,h1,h2,h3,h4,h5,h6,pre,ol,ul,dl,dd{
					margin:0;
				}
			4、外边距引发的特殊效果
				1、外边距合并
					当两个垂直外边距相遇时，他们将形成一个外边距，成为 "外边距合并"

					合并后的外边距是两个外边距中大者
				2、上下外边距溢出
					子债父还
					在满足一定的条件下，当设置子元素的上下外边距的时候，可能会作用到父元素上
					条件：
						1、父元素 没有边框
						2、子元素必须是父元素中的第一个或最后一个元素时

					解决：
						1、父元素增加上下边框
							弊端：会影响父元素的尺寸
						2、通过 父元素的 内边距，取代子元素的外边距
							弊端：会影响父元素的尺寸
						3、~~~~~~~~~~~~~~
				3、外边距对行内(inline)和行内块(inline-block)的处理
					1、对于行内元素，上下margin无效
					2、对于行内块元素，上下margin会影响到同行的所有元素
		2、内边距
			1、什么是内边距
				内容区域与边框之间的空间
				内边距会扩大元素边框所占据的区域
			2、语法
				属性：
					padding
					padding-left:
					padding-right:
					padding-top:
					padding-bottom:
				取值：
					单位：
						1、px
						2、%
				简单写法:
					padding:value;上下左右
					padding:v1 v2;上下  左右
					padding:v1 v2 v3;上  左右  下
					padding:v1 v2 v3 v4;上右下左
			3、特殊注意
				为元素设定 内边距 ，只能影响自己，不会影响到其他元素
		3、特殊
			对于 button 来说
				<input >
					type="submit/reset/button"
				<button>
			设定宽度和高度时，包含 边框 以及 内边距

			其他元素，设定宽度和高度时，只是设置 内容区域的宽和高，不包含 边框 以及 内边距

			属性：box-sizing
				作用：指定 盒子 尺寸计算 模式
				取值：
					1、content-box
						默认值，为元素所设定的width和height只是内容区域的 width和height，不包含元素的 边框和内边距
					2、border-box
						为元素所指定的width和height会包含元素的 内容宽高以及内边距和边框的距离。
2、背景属性
	1 、背景属性的作用
		控制元素的背景颜色和背景图像等信息
	2、背景属性
		1、背景颜色
			属性：background-color
			取值：
				合法颜色值
				取值为 transparent
			注意：
				背景颜色会从边框的位置处开始绘制
		2、背景图片
			属性：background-image
			取值：url(图片的URL)

			注意：如果 背景图像和背景颜色同时存在的话，那么背景图会压在背景颜色的上面
		3、背景重复
			默认背景是有平铺效果
			属性：background-repeat
			取值：
				1、repeat
					默认值，垂直和水平方向平铺
				2、no-repeat
					不平铺，背景图只显示一次
				3、repeat-x
					仅在水平方向平铺
				4、repeat-y
					仅在垂直方向平铺
		4、背景图片尺寸
			属性：background-size
			取值：
				1、value1 value2
					value1：宽度
					value2：高度
				2、value1% value2% n
					取决于元素的宽和高的占比
				3、cover
					覆盖，把背景图扩充至足够的大(等比缩放)，使背景图像完全的覆盖到元素背景区域
					注意：有可能，背景图显示不完整
				4、contain
					包含，把背景图扩充至足够的大(等比缩放)，直到背景图像的右边或下边碰到元素边缘为止
		5、背景图片固定
			属性：background-attachment
			取值：
				1、scroll
					默认值，背景会随着文档滚动
				2、fixed
					固定
		6、背景图像定位/位置(重难点)
			属性：background-position
			取值：
				1、x y
					x:背景图像横向偏移距离
						取值为正，背景图向右移动
						取值为负，背景图向左移动
					y:背景图纵向偏移距离
						取值为正，背景图向下移动
						取值为负，背景图向上移动
				2、x% y%
					取决于父元素宽和高的占比
				3、关键字
					x:left/center/right
					y:top/center/bottom

					background-position:center;
					注意：使用关键字时，x，y的位置可以互换
					background-position:top left;
			
			特殊使用方式：
			CSS Sprites : 图片拼合技术，将若干副小图像拼到一副大图中。以便减少服务器端的请求
			显示图像步骤：
			1、根据要显示的图标大小，创建一个一样大小的元素
			2、将 拼合的图像作为 元素的背景，使用背景图像定位的方式 移动图像以便显示要看的小图

			宽度：76px
			高度：15px
			x：-108px
			y：-238px
		7、背景属性
			将背景若干属性值声明在一个属性中
			语法：
				background:color url() repeat attachment position;

			注意：如果采用 background的简写方式的话，被省略的值将采用默认值来取代
			background:red;

			常用方式：
				background:url() repeat position;
3、渐变
	1、什么是渐变
		两种或多种颜色之间平滑过渡的效果
	2、组成
		1、色标 来组成
			色标：
				1、颜色
				2、颜色的出现的位置
	3、渐变分类
		1、线性渐变
		2、径向渐变
		3、重复渐变(线性/径向)
	4、渐变的语法
		1、属性
			background-image
			取值：
			1、linear-gradient()
				线性渐变
			2、radial-gradient()
				径向渐变
			3、repeating-linear-gradient()
				重复线性渐变
			4、repeating-radial-gradient()
				重复径向渐变
		2、线性渐变
			background-image:linear-gradient(angle,color-point,color-point,...);
			1、angle
				作用：指定 渐变的 方向或角度
				取值：方向的关键词或角度值
					1、to top --> 0deg
						从下向上填充渐变
					2、to right --> 90deg
						从左向右填充渐变
					3、to bottom --> 180deg
						从上向下填充渐变
					4、to left --> 270deg
						从右向左填充渐变
					5、角度
						0deg ~ 360deg
			2、color-point
				作用：色标，标识一种颜色，以及出现的位置
				ex:
					开始的时候是红色 : red 0px/0%
					50%的时候是蓝色 : blue 50%
					结束的时候是绿色 : green 100%







