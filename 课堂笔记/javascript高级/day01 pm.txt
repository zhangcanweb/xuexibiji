正课:
1. ***数组:
  ***关联数组
  ***数组API

1. ***关联数组:
  索引数组: 下标为数字的数组
  
  什么是关联数组: 可自定义下标名称的数组
  为什么: 索引数组中的数字下标没有明确的意义
    何时: 只要希望每个元素都有专门的名称时
    如何: 2步:
      1. 创建空数组
      2. 向空数组中添加新元素，并自定义下标名称

    索引数组        vs 关联数组:
 1. 以字符串输出       不能用字符串输出
 2. 下标是数字         下标是自定义的字符串
 3. length属性有效     length属性失效(=0)
 4.       访问元素,都用数组名["下标"]
 5. 可用for循环遍历    不能用for循环遍历――for in

  遍历关联数组: for in循环
    for(var key in hash){
      key//只是元素的下标名
      hash[key]//当前元素值
    }
***其实: js底层，一切对象都是关联数组:
   比如: 索引数组，window等

  hash: 散列算法，接受一个字符串，并计算出尽量不重复的序号
    不同的字符串，计量计算出不同的序号
    相同的字符串，一定计算出相同的序号
  关联数组，也叫hash数组
    原理: 
     存入元素: 将字符串类型的元素名，交给hash算法，计算出一个尽量不重复的数字。再将元素值，存入数字表示的位置
     获取元素: 将要查找的元素名, 交给hash算法，计算出和存入时完全一致的序号，直接到序号标识的位置获取元素值。
  
  查找: 索引              hash数组 
        遍历              不用遍历
    受存储位置影响      和存储位置无关
    受数组元素个数影响  和数组中元素个数无关
  总结: 今后只要希望快速查找元素时，就用hash数组

数组API: 

1.数组转字符串: 
  1. String(arr): 将arr中每个元素转为字符串，用逗号分隔
     固定套路: 对数组拍照: 用于鉴别是否数组被修改过
  2. arr.join("连接符"): 将arr中每个元素转为字符串，用自定义的连接符分隔
     固定套路: 
      1.将字符组成单词: chars.join("")->无缝拼接
        扩展: 判断数组是空数组: arr.join("")==""
      2.将单词组成句子: words.join(" ")
      3.将数组转化为页面元素的内容: 













